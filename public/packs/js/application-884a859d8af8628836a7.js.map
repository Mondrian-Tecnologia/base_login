{"version":3,"file":"js/application-884a859d8af8628836a7.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/application.js","webpack:///./app/javascript/richtext.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/application.js\");\n","// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\n//require(\"@rails/ujs\").start()\n//require(\"turbolinks\").start()\n//require(\"@rails/activestorage\").start()\n//require(\"channels\")\n\nlet Trix = window.Trix = require(\"trix\")\nimport \"../richtext\"\nrequire(\"trix\")\nrequire(\"@rails/actiontext\")\n\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\n","import Trix from \"trix\"\n\naddHeadingAttributes()\naddForegroundColorAttributes()\naddBackgroundColorAttributes()\n\naddEventListener(\"trix-initialize\", function (event) {\n    new RichText(event.target)\n})\n\naddEventListener(\"trix-action-invoke\", function (event) {\n  if (event.actionName == \"x-horizontal-rule\") insertHorizontalRule()\n\n  function insertHorizontalRule() {\n    event.target.editor.insertAttachment(buildHorizontalRule())\n  }\n\n  function buildHorizontalRule() {\n    return new Trix.Attachment({ content: \"<hr>\", contentType: \"vnd.rubyonrails.horizontal-rule.html\" })\n  }\n})\n\nclass RichText {\n  constructor(element) {\n    this.element = element\n\n    this.insertHeadingElements()\n    this.insertDividerElements()\n    this.insertColorElements()\n  }\n\n  insertHeadingElements() {\n    this.removeOriginalHeadingButton()\n    this.insertNewHeadingButton()\n    this.insertHeadingDialog()\n  }\n\n  removeOriginalHeadingButton() {\n    this.buttonGroupBlockTools.removeChild(this.originalHeadingButton)\n  }\n\n  insertNewHeadingButton() {\n    this.buttonGroupBlockTools.insertAdjacentHTML(\"afterbegin\", this.headingButtonTemplate)\n  }\n\n  insertHeadingDialog() {\n    this.dialogsElement.insertAdjacentHTML(\"beforeend\", this.dialogHeadingTemplate)\n  }\n\n  insertDividerElements() {\n    this.quoteButton.insertAdjacentHTML(\"afterend\", this.horizontalButtonTemplate)\n  }\n\n  insertColorElements() {\n    this.insertColorButton()\n    this.insertDialogColor()\n  }\n\n  insertColorButton() {\n    this.buttonGroupTextTools.insertAdjacentHTML(\"beforeend\", this.colorButtonTemplate)\n  }\n\n  insertDialogColor() {\n    this.dialogsElement.insertAdjacentHTML(\"beforeend\", this.dialogColorTemplate)\n  }\n\n  get buttonGroupBlockTools() {\n    return this.toolbarElement.querySelector(\"[data-trix-button-group=block-tools]\")\n  }\n\n  get buttonGroupTextTools() {\n    return this.toolbarElement.querySelector(\"[data-trix-button-group=text-tools]\")\n  }\n\n  get dialogsElement() {\n    return this.toolbarElement.querySelector(\"[data-trix-dialogs]\")\n  }\n\n  get originalHeadingButton() {\n    return this.toolbarElement.querySelector(\"[data-trix-attribute=heading1]\")\n  }\n\n  get quoteButton() {\n    return this.toolbarElement.querySelector(\"[data-trix-attribute=quote]\")\n  }\n\n  get toolbarElement() {\n    return this.element.toolbarElement\n  }\n\n  get horizontalButtonTemplate() {\n    return '<button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-horizontal-rule\" data-trix-action=\"x-horizontal-rule\" tabindex=\"-1\" title=\"Divider\">Divider</button>'\n  }\n\n  get headingButtonTemplate() {\n    return '<button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-action=\"x-heading\" title=\"Heading\" tabindex=\"-1\">Heading</button>'\n  }\n\n  get colorButtonTemplate() {\n    return '<button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-color\" data-trix-action=\"x-color\" title=\"Color\" tabindex=\"-1\">Color</button>'\n  }\n\n  get dialogHeadingTemplate() {\n    return `\n      <div class=\"trix-dialog trix-dialog--heading\" data-trix-dialog=\"x-heading\" data-trix-dialog-attribute=\"x-heading\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"text\" name=\"x-heading\" class=\"trix-dialog-hidden__input\" data-trix-input>\n          <div class=\"trix-button-group\">\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"heading1\">H1</button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"heading2\">H2</button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"heading3\">H3</button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"heading4\">H4</button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"heading5\">H5</button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"heading6\">H6</button>\n          </div>\n        </div>\n      </div>\n    `\n  }\n\n  get dialogColorTemplate() {\n    return `\n      <div class=\"trix-dialog trix-dialog--color\" data-trix-dialog=\"x-color\" data-trix-dialog-attribute=\"x-color\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"text\" name=\"x-color\" class=\"trix-dialog-hidden__input\" data-trix-input>\n          <div class=\"trix-button-group\">\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor1\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor2\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor3\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor4\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor5\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor6\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor7\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor8\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"fgColor9\" data-trix-method=\"hideDialog\"></button>\n          </div>\n          <div class=\"trix-button-group\">\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor1\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor2\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor3\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor4\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor5\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor6\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor7\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor8\" data-trix-method=\"hideDialog\"></button>\n            <button type=\"button\" class=\"trix-button trix-button--dialog\" data-trix-attribute=\"bgColor9\" data-trix-method=\"hideDialog\"></button>\n          </div>\n        </div>\n      </div>\n    `\n  }\n}\n\nfunction addHeadingAttributes() {\n  Array.from([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]).forEach((tagName, i) => {\n    Trix.config.blockAttributes[`heading${(i + 1)}`] = { tagName: tagName, terminal: true, breakOnReturn: true, group: false }\n  })\n}\n\nfunction addForegroundColorAttributes() {\n  Array.from([\"rgb(136, 118, 38)\", \"rgb(185, 94, 6)\", \"rgb(207, 0, 0)\", \"rgb(216, 28, 170)\", \"rgb(144, 19, 254)\", \"rgb(5, 98, 185)\", \"rgb(17, 138, 15)\", \"rgb(148, 82, 22)\", \"rgb(102, 102, 102)\"]).forEach((color, i) => {\n    Trix.config.textAttributes[`fgColor${(i + 1)}`] = { style: { color: color }, inheritable: true, parser: e => e.style.color == color }\n  })\n}\n\nfunction addBackgroundColorAttributes() {\n  Array.from([\"rgb(250, 247, 133)\", \"rgb(255, 240, 219)\", \"rgb(255, 229, 229)\", \"rgb(255, 228, 247)\", \"rgb(242, 237, 255)\", \"rgb(225, 239, 252)\", \"rgb(228, 248, 226)\", \"rgb(238, 226, 215)\", \"rgb(242, 242, 242)\"]).forEach((color, i) => {\n    Trix.config.textAttributes[`bgColor${(i + 1)}`] = { style: { backgroundColor: color }, inheritable: true, parser: e => e.style.backgroundColor == color }\n  })\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAeA;;;AAEA;AACA;AA6BA;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}